import{_ as $}from"../static/preload-helper-094304c8.js";import{r as b}from"../static/index-57ee1c51.js";import{s as p}from"../static/server.browser-3799a08d.js";const _=e=>{const t=e.split("/");return t.pop(),t.map(r=>"../").reduce((r,n)=>r+n,"")};var d={exports:{}},s=String,u=function(){return{isColorSupported:!1,reset:s,bold:s,dim:s,italic:s,underline:s,inverse:s,hidden:s,strikethrough:s,black:s,red:s,green:s,yellow:s,blue:s,magenta:s,cyan:s,white:s,gray:s,bgBlack:s,bgRed:s,bgGreen:s,bgYellow:s,bgBlue:s,bgMagenta:s,bgCyan:s,bgWhite:s}};d.exports=u();d.exports.createColors=u;const T=e=>`<title>${e.title?e.title:"Yext Pages Site"}</title>
    <meta charset="${e.charset||"UTF-8"}">
    <meta name="viewport" content="${e.viewport||"width=device-width, initial-scale=1"}">
    ${e.tags?e.tags.map(y).join(`
`):""}
    ${e.other?e.other:""}`.split(`
`).filter(t=>t.trim()!="").join(`
`),y=e=>{switch(e.type){case"base":case"link":case"meta":return`<${e.type} ${f(e.attributes)}>`;case"style":case"script":case"noscript":case"template":return`<${e.type} ${f(e.attributes)}></${e.type}>`;default:return console.log(d.exports.yellow(`[WARNING]: Tag type ${e.type} is unsupported by the Tag interface. Please use "other" to render this tag.`)),""}},f=e=>Object.keys(e).map(t=>`${t}="${e[t]}"`).join(" "),v=(e,t)=>{var r,n;return e!=null&&e.lang?e.lang:(r=t==null?void 0:t.document)!=null&&r.locale?(n=t==null?void 0:t.document)==null?void 0:n.locale:"en"},x=(e,t,r,n,o)=>{const i=e.__meta.manifest.projectFilepaths,a=o?o(e):void 0;return`<!DOCTYPE html>
    <html lang=${v(a,e)}>
    <head>
        <script>window.__INITIAL__DATA__ = ${JSON.stringify(e)}<\/script>
        ${h(`${i.templatesRoot}/${t.templateName}.tsx`,e.__meta.manifest.bundlerManifest,new Set).map(l=>`<link rel="stylesheet" href="/${l}"/>`).filter((l,g,w)=>w.indexOf(l)==g).join(`
`)}
        ${a?T(a):""}
    </head>
    <body>
        <div id="reactele">${r}</div>${n?`<script type="module" src="/${P(`${i.hydrationBundleOutputRoot}/${t.templateName}.tsx`,e)}" defer><\/script>`:""}
    </body>
    </html>`},h=(e,t,r)=>{const n=Object.entries(t).find(([c])=>c===e);if(!n)return[];const[o,i]=n;r.add(o);const a=i.css||[];return(i.imports||[]).flatMap(c=>h(c,t,r)).forEach(c=>a.push(c)),a},P=(e,t)=>{const{__meta:r}=t;for(const[n,o]of Object.entries(r.manifest.bundlerManifest))if(n===e)return o.file},E=e=>{if(O(e.filename,e.config),!e.getPath)throw new Error(`Template ${e.filename} is missing an exported getPath function.`);if(!e.default&&!e.render)throw new Error(`Module ${e.filename} does not have the necessary exports to produce page. A module should either have a React component as a default export or a render function.`)},O=(e,t)=>{if(!t.name)throw new Error(`Template ${e} is missing a "name" in the config function.`);if(t.streamId&&t.stream)throw new Error(`Template ${e} must not define both a "streamId" and a "stream".`)},R=(e,t)=>{let r=e.split("/")[e.split("/").length-1];const n=r.slice(r.lastIndexOf("."));let o=r.slice(0,r.lastIndexOf("."));return t&&(r=r.split(n)[0].slice(0,r.split(n)[0].lastIndexOf("."))+n,o=o.slice(0,o.lastIndexOf("."))),{base:r,name:o}},j=(e,t,r)=>{const n=R(e,r),o={...t,config:N(n.name,t.config),path:e,filename:n.base,templateName:n.name};return E(o),o},N=(e,t)=>{var r;return{name:(r=t==null?void 0:t.name)!=null?r:e,...t}},m=new Map,A=async(e,t)=>{const r=t.bundlePaths[e].replace("assets","..");if(!r)throw new Error(`Could not find path for feature ${e}`);let n=m.get(r);n||(n=await $(()=>import(r),[]));const o=j(r,n,!0);return m.set(r,o),o},S=async(e,t)=>{var i,a;e.transformProps&&(t=await e.transformProps(t));const r=e.getPath(t);if(!r)throw new Error(`getPath does not return a valid string in template '${e.templateName}'`);const n={...t,path:r,relativePrefixToRoot:_(r)};return{content:k(e,n),path:r,redirects:(a=(i=e.getRedirects)==null?void 0:i.call(e,n))!=null?a:[]}},k=(e,t)=>{const{default:r,render:n,getHeadConfig:o}=e;if(!r&&!n)throw new Error(`Cannot render html from template '${e.config.name}'. Template is missing render function or default export.`);return n?(o&&console.warn(`getHeadConfig for template ${e.config.name} will not be called since a custom render function is defined.`),n(t)):x(t,e,p.exports.renderToString(b.exports.createElement(r,t)),!0,o)};var D=async e=>{const t=e.__meta.manifest,r=await A(e.document.__.name,t);return await S(r,e)};export{D as default};
